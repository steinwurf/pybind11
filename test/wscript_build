#! /usr/bin/env python
# encoding: utf-8

#CXX = bld.env.get_flat("CXX")
# Matches both /usr/bin/g++ and /usr/bin/clang++
#if 'g++' in CXX or 'clang' in CXX:
#    bld.env.append_value('CXXFLAGS', '-fPIC')

tests = bld.dependency_node('pybind11-source').find_dir('tests')
#sources = tests.find_node(['pybind11_tests.cpp', 'test_class.cpp'])
sources = tests.ant_glob(
    '*.cpp', excl=['*eigen*', 'pybind11_cross_module_tests.cpp'])

bld(
    features='cxx cxxshlib pyext',
    source=sources,
    target='pybind11_tests',
    use=['pybind11_includes']
)

# The second module contains tests that require multiple modules
bld(
    features='cxx cxxshlib pyext',
    source=tests.find_node(['pybind11_cross_module_tests.cpp']),
    target='pybind11_cross_module_tests',
    use=['pybind11_includes']
)

